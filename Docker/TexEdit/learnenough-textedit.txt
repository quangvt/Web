SECTION 1

> ESC:q!
=> quit force

> i 
=> exit normal mode, enter insertion mode

> ESC
=> exit insertion mode, enter normal mode

> Arrow keys
=> Move around

> 0
=> go to beginning of line

> $
=> go to end of line

> :w
=> Save (write) a file

> :q
=> Quite a file (must be saved)

> :wq
=> Write and quit a file

> :q!
=> Force-quit a file, discarding any changes

> u
=> Undo

> x
=> Delete the character under the cursor

> dd
=> Delete a line

> p
=> Put (paste) deleted text

> it's spots
=> No, you mean its spots

> Ctrl-F
=> Go forward one screen

> Ctrl-B
=> Go backward one screen

> G
=> Go to last line

> 1G
=> Go to first line

> /<string>
=> Search for <string>


=======================================
2. 
Key & Symbol

2.3 Moving
(Command + arrow)

2.4 Selecting text
> select word
- command + D

> select a single line
- Command + left (twice) => Shift + Command + right
- Command + right => Shift + Command + Left(twice)

> select multiple lines
- Hold down the Shift key and move the up and down arrow keys

> selecting the entire document
- Command + A

2.5 Cut, copy, paste
> Jumpcut
=> control + option + V + up/down

2.6 Deleting and undoing
> delete one word
- OPTION + DELETE

2.7 Saving
Listing 12: My preferred, more compact prompt.
[~]$
Listing 13: The Bash lines needed to customize the prompt as shown in Listing 12.
~/.bash_profile
 alias lr='ls -hartl'
# Customize prompt to show only working directory.
PS1='[\W]\$ '

2.8 Finding and Replacing
> Command + F
> Command + G (Find NEXT MATCH)

=====================
3. Advanced text
3.1 Autocomplete and tab trigger
- autocomplete use current doc
- tab triggers

3.2 Writing source codeg
- commenting out
# => COMMAND + /
- Indenting and Dedenting
Shift + Left/Right
COMMAND + ]/[
- Goto line number
<n>G
^G
:<number>
- 80 columns

3.3 Writing an executable script
$kill -15 12241
- 15/2/1/9
- ekill (escalating kill)
- #!/bin/bash => "she-BANG"
  => tells our system to use the shell prog located in /bin/bash to execute the script

- ~/bin (some system use the env variable $HOME) => $HOME/bin:$PATH

$ source ~/.bash_profile

$ chmode +x ~/bin/ekill
=> to make the resulting script execuatble, we need to use the "change mode" command to add the "execute bit" x as follows
=> at this point, we can verify that the ekill script is ready to go using the which command
$ which ekill
=> /Users/mhartl/bin/ekill

3.4 Editing projects
$ atom .

- fuzzy opening
=> COMMAND + P => type some of letter
=> Switch openning files: COMMAND+1, COMMAND+2....

- Multiple panes

- Global find and replace
=> SHIFT + COMMAND + F

3.5 Customization

3.6 Summary
- COMMAND + M: Close Tab
- echo $PATH
- chmod +x <filename> : make filename executable
- COMMAND + P : Fuzzy opening
- COMMAND1 : switch focus to tab 1
- SHIFT + COMMAND + F : Global find and replace