$docker run hello-world
=> check local
  - download from server if image is not existed at local (download each layer of image)
  - run image to a container
=> explain command
  docker: tells your os you are using the docker program
  run: a subcommand that create & run a Docker container
  hello-world: tells docker which image to load into the container
=> others
  - image: is a filesystem and parameters to use at runtime. It doesn't have state and never changes. A container is A RUNNING INSTANCE of an image. (Docker Engine loads the image into the container and "ran" it)

$docker ps -a
=> show all container on the system

$docker run docker/whalesay cowsay boo
=> 

$docker images
=> the commmand lists all the images on your local system.

$mkdir mydockerbuild
=> make a new directory (if windows use: md)

$cd mydockerbuild
=> change to your new directory

$nano Dockerfile  (nana or vi on Linux and Mac, or notepad on Windows)
=> Edit a new text file named Dockerfile in the current 
* windows: The . tells notepad not to add a .txt extension
C:\> notepad Dockerfile.

FROM docker/whale:latest
=> which image your image is based on

RUN apt-get -y update && apt-get install -y fortunes
=> The whalesay image is based on Ubuntu, which use apt-get to install packages. These two commands refresh the list of package available to the image and install the fortunes program into it. The fortunes program prints out wise sayings for our whale to say

CMD /usr/games/fortune -a | cowsay
=> CMD theo the image the final comaand to run after its env is set up. This command runs fortune -a and sends its output to the cowsay command.

Save Dockerfile

$docker build -t docker-whale .
=> -t: gives your image a tag
  - dont forget . command, which tells the docker build command to look in the current directory for a file called Dockerfile.
  - 1. Docker checks to make sure it has everything it needs to build. This generates this message
  - 2. Docker checks to see whether it already heas the whalesay image locally and pulls it from Docker hub if not.
  - 3. Docker starts up a temporary container running the whalesay image. In the temporary container, Docker runs the next command in the Dockerfile, which is the RUN command, which installs the fortune command. When the RUN command finishes, a new layer is created and the intermediate container is removed.
  - 4. A new intermediate container is created, and docker adds layer for the CMD line in the Dockerfile, and removes the intermediate container.
  
  $docker images
  => REPOSITORY value of image: docker-whale => You need to inclde the namespace for Docker Hub to associate it with your account. YOUR_DOCKERHUB_NAME/docker-whale
  
  $docker tag {the image ID} YOUR_DOCKERHUB_NAME/docker-whale:latest
  => tage the docker-whale image using the docker tag command and the image ID.
  
  $docker login
  
  $docker push quangvt/docker-whale
  => Push your targeted image to Docker Hub
  
  $docker pull
  => you need to remove the local copy. Otherwise, docker pull will not have any work to do, because it will see that you already have the latest verion of the image locally.
  
  $docker rmi -f image_id
  => docker rmi command to remove the images. can use id or name.